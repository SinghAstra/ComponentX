{
  "title": "Theming",
  "description": "Using CSS Variables or Tailwind CSS for theming.\r",
  "published": true,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nYou can choose between using CSS variables or Tailwind CSS utility classes for theming.\r\n\r\n## Utility classes\r\n\r\n```tsx /bg-zinc-950/ /text-zinc-50/ /dark:bg-white/ /dark:text-zinc-950/\r\n<div className=\"bg-zinc-950 dark:bg-white\" />\r\n```\r\n\r\nTo use utility classes for theming set `tailwind.cssVariables` to `false` in your `components.json` file.\r\n\r\n```json {8} title=\"components.json\"\r\n{\r\n  \"style\": \"default\",\r\n  \"rsc\": true,\r\n  \"tailwind\": {\r\n    \"config\": \"tailwind.config.js\",\r\n    \"css\": \"app/globals.css\",\r\n    \"baseColor\": \"slate\",\r\n    \"cssVariables\": false\r\n  },\r\n  \"aliases\": {\r\n    \"components\": \"@/components\",\r\n    \"utils\": \"@/lib/utils\"\r\n  }\r\n}\r\n```\r\n\r\n## CSS Variables\r\n\r\n```tsx /bg-background/ /text-foreground/\r\n<div className=\"bg-background text-foreground\" />\r\n```\r\n\r\nTo use CSS variables for theming set `tailwind.cssVariables` to `true` in your `components.json` file.\r\n\r\n```json {8} title=\"components.json\"\r\n{\r\n  \"style\": \"default\",\r\n  \"rsc\": true,\r\n  \"tailwind\": {\r\n    \"config\": \"tailwind.config.js\",\r\n    \"css\": \"app/globals.css\",\r\n    \"baseColor\": \"slate\",\r\n    \"cssVariables\": true\r\n  },\r\n  \"aliases\": {\r\n    \"components\": \"@/components\",\r\n    \"utils\": \"@/lib/utils\"\r\n  }\r\n}\r\n```\r\n\r\n### Convention\r\n\r\nWe use a simple `background` and `foreground` convention for colors. The `background` variable is used for the background color of the component and the `foreground` variable is used for the text color.\r\n\r\n<Callout className=\"mt-4\">\r\n\r\nThe `background` suffix is omitted when the variable is used for the background color of the component.\r\n\r\n</Callout>\r\n\r\nGiven the following CSS variables:\r\n\r\n```css\r\n--primary: 222.2 47.4% 11.2%;\r\n--primary-foreground: 210 40% 98%;\r\n```\r\n\r\nThe `background` color of the following component will be `hsl(var(--primary))` and the `foreground` color will be `hsl(var(--primary-foreground))`.\r\n\r\n```tsx\r\n<div className=\"bg-primary text-primary-foreground\">Hello</div>\r\n```\r\n\r\n<Callout>\r\n\r\n**CSS variables must be defined without color space function**. See the [Tailwind CSS documentation](https://tailwindcss.com/docs/customizing-colors#using-css-variables) for more information.\r\n\r\n</Callout>\r\n\r\n<Steps>\r\n  <Step>First Step Description</Step>\r\n  <Step>Second Step Description</Step>\r\n  <Step>Third Step Description</Step>\r\n</Steps>\r\n\r\n### List of variables\r\n\r\nHere's the list of variables available for customization:\r\n\r\n<Steps>\r\n\r\n```css title=\"Default background color of <body />...etc\"\r\n--background: 0 0% 100%;\r\n--foreground: 222.2 47.4% 11.2%;\r\n```\r\n\r\n```css title=\"Muted backgrounds such as <TabsList />, <Skeleton /> and <Switch />\"\r\n--muted: 210 40% 96.1%;\r\n--muted-foreground: 215.4 16.3% 46.9%;\r\n```\r\n\r\n```css title=\"Background color for <Card />\"\r\n--card: 0 0% 100%;\r\n--card-foreground: 222.2 47.4% 11.2%;\r\n```\r\n\r\n```css title=\"Background color for popovers such as <DropdownMenu />, <HoverCard />, <Popover />\"\r\n--popover: 0 0% 100%;\r\n--popover-foreground: 222.2 47.4% 11.2%;\r\n```\r\n\r\n```css title=\"Default border color\"\r\n--border: 214.3 31.8% 91.4%;\r\n```\r\n\r\n```css title=\"Border color for inputs such as <Input />, <Select />, <Textarea />\"\r\n--input: 214.3 31.8% 91.4%;\r\n```\r\n\r\n```css title=\"Primary colors for <Button />\"\r\n--primary: 222.2 47.4% 11.2%;\r\n--primary-foreground: 210 40% 98%;\r\n```\r\n\r\n```css title=\"Secondary colors for <Button />\"\r\n--secondary: 210 40% 96.1%;\r\n--secondary-foreground: 222.2 47.4% 11.2%;\r\n```\r\n\r\n```css title=\"Used for accents such as hover effects on <DropdownMenuItem>, <SelectItem>...etc\"\r\n--accent: 210 40% 96.1%;\r\n--accent-foreground: 222.2 47.4% 11.2%;\r\n```\r\n\r\n```css title=\"Used for destructive actions such as <Button variant=\"destructive\">\"\r\n--destructive: 0 100% 50%;\r\n--destructive-foreground: 210 40% 98%;\r\n```\r\n\r\n```css title=\"Used for focus ring\"\r\n--ring: 215 20.2% 65.1%;\r\n```\r\n\r\n```css title=\"Border radius for card, input and buttons\"\r\n--radius: 0.5rem;\r\n```\r\n\r\n</Steps>\r\n\r\n### Adding new colors\r\n\r\nTo add new colors, you need to add them to your CSS file and to your `tailwind.config.js` file.\r\n\r\n```css title=\"app/globals.css\"\r\n:root {\r\n  --warning: 38 92% 50%;\r\n  --warning-foreground: 48 96% 89%;\r\n}\r\n\r\n.dark {\r\n  --warning: 48 96% 89%;\r\n  --warning-foreground: 38 92% 50%;\r\n}\r\n```\r\n\r\n```js {5-6} title=\"tailwind.config.js\"\r\nmodule.exports = {\r\n  theme: {\r\n    extend: {\r\n      colors: {\r\n        warning: \"hsl(var(--warning))\",\r\n        \"warning-foreground\": \"hsl(var(--warning-foreground))\",\r\n      },\r\n    },\r\n  },\r\n};\r\n```\r\n\r\nYou can now use the `warning` utility class in your components.\r\n\r\n```tsx /bg-warning/ /text-warning-foreground/\r\n<div className=\"bg-warning text-warning-foreground\" />\r\n```\r\n\r\n### Other color formats\r\n\r\nI recommend using [HSL colors](https://www.smashingmagazine.com/2021/07/hsl-colors-css/) for theming but you can also use other color formats if you prefer.\r\n\r\nSee the [Tailwind CSS documentation](https://tailwindcss.com/docs/customizing-colors#using-css-variables) for more information on using `rgb`, `rgba` or `hsl` colors.\r\n",
    "code": "var Component=(()=>{var u=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var w=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),v=(r,e)=>{for(var i in e)a(r,i,{get:e[i],enumerable:!0})},l=(r,e,i,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of m(e))!b.call(r,o)&&o!==i&&a(r,o,{get:()=>e[o],enumerable:!(c=p(e,o))||c.enumerable});return r};var S=(r,e,i)=>(i=r!=null?u(f(r)):{},l(e||!r||!r.__esModule?a(i,\"default\",{value:r,enumerable:!0}):i,r)),N=r=>l(a({},\"__esModule\",{value:!0}),r);var t=w((k,d)=>{d.exports=_jsx_runtime});var x={};v(x,{default:()=>g,frontmatter:()=>y});var n=S(t()),y={title:\"Theming\",description:\"Using CSS Variables or Tailwind CSS for theming.\"};function h(r){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...r.components},{Callout:i,Step:c,Steps:o}=e;return i||s(\"Callout\",!0),c||s(\"Step\",!0),o||s(\"Steps\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"You can choose between using CSS variables or Tailwind CSS utility classes for theming.\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"utility-classes\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#utility-classes\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Utility classes\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`<div className=\"bg-zinc-950 dark:bg-white\" />\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"To use utility classes for theming set \",(0,n.jsx)(e.code,{children:\"tailwind.cssVariables\"}),\" to \",(0,n.jsx)(e.code,{children:\"false\"}),\" in your \",(0,n.jsx)(e.code,{children:\"components.json\"}),\" file.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-json\",children:`{\\r\n  \"style\": \"default\",\\r\n  \"rsc\": true,\\r\n  \"tailwind\": {\\r\n    \"config\": \"tailwind.config.js\",\\r\n    \"css\": \"app/globals.css\",\\r\n    \"baseColor\": \"slate\",\\r\n    \"cssVariables\": false\\r\n  },\\r\n  \"aliases\": {\\r\n    \"components\": \"@/components\",\\r\n    \"utils\": \"@/lib/utils\"\\r\n  }\\r\n}\n`})}),`\n`,(0,n.jsxs)(e.h2,{id:\"css-variables\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#css-variables\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"CSS Variables\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`<div className=\"bg-background text-foreground\" />\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"To use CSS variables for theming set \",(0,n.jsx)(e.code,{children:\"tailwind.cssVariables\"}),\" to \",(0,n.jsx)(e.code,{children:\"true\"}),\" in your \",(0,n.jsx)(e.code,{children:\"components.json\"}),\" file.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-json\",children:`{\\r\n  \"style\": \"default\",\\r\n  \"rsc\": true,\\r\n  \"tailwind\": {\\r\n    \"config\": \"tailwind.config.js\",\\r\n    \"css\": \"app/globals.css\",\\r\n    \"baseColor\": \"slate\",\\r\n    \"cssVariables\": true\\r\n  },\\r\n  \"aliases\": {\\r\n    \"components\": \"@/components\",\\r\n    \"utils\": \"@/lib/utils\"\\r\n  }\\r\n}\n`})}),`\n`,(0,n.jsxs)(e.h3,{id:\"convention\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#convention\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Convention\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We use a simple \",(0,n.jsx)(e.code,{children:\"background\"}),\" and \",(0,n.jsx)(e.code,{children:\"foreground\"}),\" convention for colors. The \",(0,n.jsx)(e.code,{children:\"background\"}),\" variable is used for the background color of the component and the \",(0,n.jsx)(e.code,{children:\"foreground\"}),\" variable is used for the text color.\"]}),`\n`,(0,n.jsx)(i,{className:\"mt-4\",children:(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"background\"}),\" suffix is omitted when the variable is used for the background color of the component.\"]})}),`\n`,(0,n.jsx)(e.p,{children:\"Given the following CSS variables:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--primary: 222.2 47.4% 11.2%;\\r\n--primary-foreground: 210 40% 98%;\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"background\"}),\" color of the following component will be \",(0,n.jsx)(e.code,{children:\"hsl(var(--primary))\"}),\" and the \",(0,n.jsx)(e.code,{children:\"foreground\"}),\" color will be \",(0,n.jsx)(e.code,{children:\"hsl(var(--primary-foreground))\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`<div className=\"bg-primary text-primary-foreground\">Hello</div>\n`})}),`\n`,(0,n.jsx)(i,{children:(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"CSS variables must be defined without color space function\"}),\". See the \",(0,n.jsx)(e.a,{href:\"https://tailwindcss.com/docs/customizing-colors#using-css-variables\",children:\"Tailwind CSS documentation\"}),\" for more information.\"]})}),`\n`,(0,n.jsxs)(o,{children:[(0,n.jsx)(c,{children:\"First Step Description\"}),(0,n.jsx)(c,{children:\"Second Step Description\"}),(0,n.jsx)(c,{children:\"Third Step Description\"})]}),`\n`,(0,n.jsxs)(e.h3,{id:\"list-of-variables\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#list-of-variables\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"List of variables\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Here's the list of variables available for customization:\"}),`\n`,(0,n.jsxs)(o,{children:[(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--background: 0 0% 100%;\\r\n--foreground: 222.2 47.4% 11.2%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--muted: 210 40% 96.1%;\\r\n--muted-foreground: 215.4 16.3% 46.9%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--card: 0 0% 100%;\\r\n--card-foreground: 222.2 47.4% 11.2%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--popover: 0 0% 100%;\\r\n--popover-foreground: 222.2 47.4% 11.2%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--border: 214.3 31.8% 91.4%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--input: 214.3 31.8% 91.4%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--primary: 222.2 47.4% 11.2%;\\r\n--primary-foreground: 210 40% 98%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--secondary: 210 40% 96.1%;\\r\n--secondary-foreground: 222.2 47.4% 11.2%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--accent: 210 40% 96.1%;\\r\n--accent-foreground: 222.2 47.4% 11.2%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--destructive: 0 100% 50%;\\r\n--destructive-foreground: 210 40% 98%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--ring: 215 20.2% 65.1%;\n`})}),(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`--radius: 0.5rem;\n`})})]}),`\n`,(0,n.jsxs)(e.h3,{id:\"adding-new-colors\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#adding-new-colors\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Adding new colors\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To add new colors, you need to add them to your CSS file and to your \",(0,n.jsx)(e.code,{children:\"tailwind.config.js\"}),\" file.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`:root {\\r\n  --warning: 38 92% 50%;\\r\n  --warning-foreground: 48 96% 89%;\\r\n}\\r\n\\r\n.dark {\\r\n  --warning: 48 96% 89%;\\r\n  --warning-foreground: 38 92% 50%;\\r\n}\n`})}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`module.exports = {\\r\n  theme: {\\r\n    extend: {\\r\n      colors: {\\r\n        warning: \"hsl(var(--warning))\",\\r\n        \"warning-foreground\": \"hsl(var(--warning-foreground))\",\\r\n      },\\r\n    },\\r\n  },\\r\n};\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can now use the \",(0,n.jsx)(e.code,{children:\"warning\"}),\" utility class in your components.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:`<div className=\"bg-warning text-warning-foreground\" />\n`})}),`\n`,(0,n.jsxs)(e.h3,{id:\"other-color-formats\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#other-color-formats\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Other color formats\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"I recommend using \",(0,n.jsx)(e.a,{href:\"https://www.smashingmagazine.com/2021/07/hsl-colors-css/\",children:\"HSL colors\"}),\" for theming but you can also use other color formats if you prefer.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"See the \",(0,n.jsx)(e.a,{href:\"https://tailwindcss.com/docs/customizing-colors#using-css-variables\",children:\"Tailwind CSS documentation\"}),\" for more information on using \",(0,n.jsx)(e.code,{children:\"rgb\"}),\", \",(0,n.jsx)(e.code,{children:\"rgba\"}),\" or \",(0,n.jsx)(e.code,{children:\"hsl\"}),\" colors.\"]})]})}function g(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(h,{...r})}):h(r)}function s(r,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return N(x);})();\n;return Component;"
  },
  "_id": "docs/theming.mdx",
  "_raw": {
    "sourceFilePath": "docs/theming.mdx",
    "sourceFileName": "theming.mdx",
    "sourceFileDir": "docs",
    "contentType": "mdx",
    "flattenedPath": "docs/theming"
  },
  "type": "Doc",
  "slug": "/docs/theming",
  "slugAsParams": "theming",
  "headings": [
    {
      "level": 2,
      "title": "Utility classes",
      "id": "utility-classes"
    },
    {
      "level": 2,
      "title": "CSS Variables",
      "id": "css-variables"
    },
    {
      "level": 3,
      "title": "Convention",
      "id": "convention"
    },
    {
      "level": 3,
      "title": "List of variables",
      "id": "list-of-variables"
    },
    {
      "level": 3,
      "title": "Adding new colors",
      "id": "adding-new-colors"
    },
    {
      "level": 3,
      "title": "Other color formats",
      "id": "other-color-formats"
    }
  ]
}