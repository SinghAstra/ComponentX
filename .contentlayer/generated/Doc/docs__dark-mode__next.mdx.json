{
  "title": "Next.js",
  "description": "Adding dark mode to your next app.\r",
  "published": true,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\n## Dark mode\r\n\r\n<Steps>\r\n\r\n### Install next-themes\r\n\r\nStart by installing `next-themes`:\r\n\r\n```bash\r\nnpm install next-themes\r\n```\r\n\r\n\r\n### Create a theme provider\r\n\r\n```tsx title=\"components/theme-provider.tsx\"\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\r\n\r\nexport function ThemeProvider({\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof NextThemesProvider>) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\r\n}\r\n```\r\n\r\n### Wrap your root layout\r\n\r\nAdd the `ThemeProvider` to your root layout.\r\n\r\n```tsx {1,9-11} title=\"app/layout.tsx\"\r\nimport { ThemeProvider } from \"@/components/theme-provider\";\r\n\r\nexport default function RootLayout({ children }: RootLayoutProps) {\r\n  return (\r\n    <>\r\n      <html lang=\"en\" suppressHydrationWarning>\r\n        <head />\r\n        <body>\r\n          <ThemeProvider\r\n            attribute=\"class\"\r\n            defaultTheme=\"system\"\r\n            enableSystem\r\n            disableTransitionOnChange\r\n          >\r\n            {children}\r\n          </ThemeProvider>\r\n        </body>\r\n      </html>\r\n    </>\r\n  );\r\n}\r\n```\r\n\r\n### Add a mode toggle\r\n\r\nPlace a mode toggle on your site to toggle between light and dark mode.\r\n\r\n<ComponentPreview name=\"mode-toggle\" className=\"[&_.preview]:items-start\" />\r\n\r\n</Steps>\r\n",
    "code": "var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var t in e)i(n,t,{get:e[t],enumerable:!0})},d=(n,e,t,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of x(e))!f.call(n,a)&&a!==t&&i(n,a,{get:()=>e[a],enumerable:!(o=u(e,a))||o.enumerable});return n};var b=(n,e,t)=>(t=n!=null?p(g(n)):{},d(e||!n||!n.__esModule?i(t,\"default\",{value:n,enumerable:!0}):t,n)),P=n=>d(i({},\"__esModule\",{value:!0}),n);var c=y((w,s)=>{s.exports=_jsx_runtime});var T={};v(T,{default:()=>m,frontmatter:()=>N});var r=b(c()),N={title:\"Next.js\",description:\"Adding dark mode to your next app.\"};function l(n){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",p:\"p\",pre:\"pre\",span:\"span\",...n.components},{ComponentPreview:t,Steps:o}=e;return t||h(\"ComponentPreview\",!0),o||h(\"Steps\",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h2,{id:\"dark-mode\",children:[(0,r.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#dark-mode\",children:(0,r.jsx)(e.span,{className:\"icon icon-link\"})}),\"Dark mode\"]}),`\n`,(0,r.jsxs)(o,{children:[(0,r.jsxs)(e.h3,{id:\"install-next-themes\",children:[(0,r.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#install-next-themes\",children:(0,r.jsx)(e.span,{className:\"icon icon-link\"})}),\"Install next-themes\"]}),(0,r.jsxs)(e.p,{children:[\"Start by installing \",(0,r.jsx)(e.code,{children:\"next-themes\"}),\":\"]}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-bash\",children:`npm install next-themes\n`})}),(0,r.jsxs)(e.h3,{id:\"create-a-theme-provider\",children:[(0,r.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#create-a-theme-provider\",children:(0,r.jsx)(e.span,{className:\"icon icon-link\"})}),\"Create a theme provider\"]}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-tsx\",children:`\"use client\";\\r\n\\r\nimport * as React from \"react\";\\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\\r\n\\r\nexport function ThemeProvider({\\r\n  children,\\r\n  ...props\\r\n}: React.ComponentProps<typeof NextThemesProvider>) {\\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\\r\n}\n`})}),(0,r.jsxs)(e.h3,{id:\"wrap-your-root-layout\",children:[(0,r.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#wrap-your-root-layout\",children:(0,r.jsx)(e.span,{className:\"icon icon-link\"})}),\"Wrap your root layout\"]}),(0,r.jsxs)(e.p,{children:[\"Add the \",(0,r.jsx)(e.code,{children:\"ThemeProvider\"}),\" to your root layout.\"]}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-tsx\",children:`import { ThemeProvider } from \"@/components/theme-provider\";\\r\n\\r\nexport default function RootLayout({ children }: RootLayoutProps) {\\r\n  return (\\r\n    <>\\r\n      <html lang=\"en\" suppressHydrationWarning>\\r\n        <head />\\r\n        <body>\\r\n          <ThemeProvider\\r\n            attribute=\"class\"\\r\n            defaultTheme=\"system\"\\r\n            enableSystem\\r\n            disableTransitionOnChange\\r\n          >\\r\n            {children}\\r\n          </ThemeProvider>\\r\n        </body>\\r\n      </html>\\r\n    </>\\r\n  );\\r\n}\n`})}),(0,r.jsxs)(e.h3,{id:\"add-a-mode-toggle\",children:[(0,r.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#add-a-mode-toggle\",children:(0,r.jsx)(e.span,{className:\"icon icon-link\"})}),\"Add a mode toggle\"]}),(0,r.jsx)(e.p,{children:\"Place a mode toggle on your site to toggle between light and dark mode.\"}),(0,r.jsx)(t,{name:\"mode-toggle\",className:\"[&_.preview]:items-start\"})]})]})}function m(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}function h(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return P(T);})();\n;return Component;"
  },
  "_id": "docs/dark-mode/next.mdx",
  "_raw": {
    "sourceFilePath": "docs/dark-mode/next.mdx",
    "sourceFileName": "next.mdx",
    "sourceFileDir": "docs/dark-mode",
    "contentType": "mdx",
    "flattenedPath": "docs/dark-mode/next"
  },
  "type": "Doc",
  "slug": "/docs/dark-mode/next",
  "slugAsParams": "dark-mode/next",
  "headings": [
    {
      "level": 2,
      "title": "Dark mode",
      "id": "dark-mode"
    },
    {
      "level": 3,
      "title": "Install next-themes",
      "id": "install-next-themes"
    },
    {
      "level": 3,
      "title": "Create a theme provider",
      "id": "create-a-theme-provider"
    },
    {
      "level": 3,
      "title": "Wrap your root layout",
      "id": "wrap-your-root-layout"
    },
    {
      "level": 3,
      "title": "Add a mode toggle",
      "id": "add-a-mode-toggle"
    }
  ]
}